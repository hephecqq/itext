package com.itext.test;

import java.io.FileOutputStream;

import com.lowagie.text.BadElementException;
import com.lowagie.text.Chapter;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.List;
import com.lowagie.text.ListItem;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Phrase;
import com.lowagie.text.Section;
import com.lowagie.text.pdf.PdfPCell;
import com.lowagie.text.pdf.PdfPTable;
import com.lowagie.text.pdf.PdfWriter;
public class FirstPdf {
	  private static String FILE = "D:/FirstPdf.pdf";
	  private static Font catFont = new Font(
	      Font.BOLD);
	  private static Font redFont = new Font(
	      Font.NORMAL);
	  private static Font subFont = new Font(
	      Font.BOLD);
	  private static Font smallBold = new Font(
	      Font.BOLD);

	  public static void main(String[] args) {
	    try {
	      Document document = new Document();
	      PdfWriter.getInstance(document, new FileOutputStream(FILE));
	      document.open();
	      addMetaData(document);
	      addTitlePage(document);
	      addContent(document);
	      document.close();
	    } catch (Exception e) {
	      e.printStackTrace();
	    }
	  }

	  // iText allows to add metadata to the PDF which can be viewed in your Adobe
	  // Reader
	  // under File -> Properties
	  private static void addMetaData(Document document) {
	    document.addTitle("My first PDF");
	    document.addSubject("Using iText");
	    document.addKeywords("Java, PDF, iText");
	    document.addAuthor("Lars Vogel");
	    document.addCreator("Lars Vogel");
	  }

	  private static void addTitlePage(Document document)
	      throws DocumentException {
	    Paragraph preface = new Paragraph();
	    // 换一行
	    addEmptyLine(preface, 1);
	    // 设置一个大的标题
	    preface.add(new Paragraph("Title of the document", catFont));
		//换一行
	    addEmptyLine(preface, 1);
	    // 将会创建形如如下格式: Report generated by: _name, _date
	    preface.add(new Paragraph("Report generated by: " + System.getProperty("user.name") + ", " + new java.util.Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
	        smallBold));
	    addEmptyLine(preface, 3);
	    preface.add(new Paragraph("This document describes something which is very important ",
	        smallBold));
		//换8行
	    addEmptyLine(preface, 8);
		//将该段落中添加新的段落
	    preface.add(new Paragraph("This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
	        redFont));
		//将该段落添加到document中
	    document.add(preface);
	    //开始下一行
	    document.newPage();
	  }

	  //为PDF添加内容
	  private static void addContent(Document document) throws DocumentException {
	    //创建一个锚点
	//	Anchor anchor = new Anchor();
	    //为锚点设置内容
		//anchor.setName("First Chapter");
	    // Second parameter is the number of the chapter
	    Chapter catPart = new Chapter(new Paragraph(), 1);

	    Paragraph subPara = new Paragraph("Subcategory 1", subFont);
	    Section subCatPart = catPart.addSection(subPara);
	    subCatPart.add(new Paragraph("Hello"));

	    subPara = new Paragraph("Subcategory 2", subFont);
	    subCatPart = catPart.addSection(subPara);
	    subCatPart.add(new Paragraph("Paragraph 1"));
	    subCatPart.add(new Paragraph("Paragraph 2"));
	    subCatPart.add(new Paragraph("Paragraph 3"));

	    //添加一个List
	    createList(subCatPart);
	    Paragraph paragraph = new Paragraph();
	    addEmptyLine(paragraph, 5);
	    subCatPart.add(paragraph);

	    // 添加一个Table
	    createTable(subCatPart);

	    // 将新添加的内容加入到document
	    document.add(catPart);

	    // Next section
	    
	    // Second parameter is the number of the chapter
	    catPart = new Chapter(new Paragraph("a"), 1);

	    subPara = new Paragraph("Subcategory", subFont);
	    subCatPart = catPart.addSection(subPara);
	    subCatPart.add(new Paragraph("This is a very important message"));

	    // now add all this to the document
	    document.add(catPart);

	  }

	  //创建一个Table
	  private static void createTable(Section subCatPart)
	      throws BadElementException {
		 //创建一个PdfPTable对象
	    PdfPTable table = new PdfPTable(3);
		//为PdfPTable对象设置相应的属性
	    // t.setBorderColor(BaseColor.GRAY);
	    // t.setPadding(4);
	    // t.setSpacing(4);
	    // t.setBorderWidth(1);
		//创建相应的PDFPCell对象
	    PdfPCell c1 = new PdfPCell(new Phrase("Table Header 1"));
	    //设置PdfPCell的HorizontalAlignment属性为居中对齐
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		//将cell添加到table中
	    table.addCell(c1);
		//在创建一个PDFPCell对象
	    c1 = new PdfPCell(new Phrase("Table Header 2"));
	    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    table.addCell(c1);

	    c1 = new PdfPCell(new Phrase("Table Header 3"));
	    c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    table.addCell(c1);
	    table.setHeaderRows(1);
		
	    table.addCell("1.0");
	    table.addCell("1.1");
	    table.addCell("1.2");
	    table.addCell("2.1");
	    table.addCell("2.2");
	    table.addCell("2.3");

	    subCatPart.add(table);

	  }

	  //创建一个List对象
	  private static void createList(Section subCatPart) {
	    List list = new List(true, false, 10);
	    list.add(new ListItem("First point"));
	    list.add(new ListItem("Second point"));
	    list.add(new ListItem("Third point"));
	    subCatPart.add(list);
	  }

	  //添加换行操作
	  private static void addEmptyLine(Paragraph paragraph, int number) {
	    for (int i = 0; i < number; i++) {
	      paragraph.add(new Paragraph(" "));
	    }
	  }
	} 